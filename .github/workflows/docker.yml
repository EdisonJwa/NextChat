name: Publish Docker image

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v3

      - 
        name: Apply custom patch
        run: |
          echo 'ZGlmZiAtLWdpdCBhL2FwcC9sYXlvdXQudHN4IGIvYXBwL2xheW91dC50c3gKaW5kZXggNDdjMDU4ZmIuLjczYjllYmZkIDEwMDY0NAotLS0gYS9hcHAvbGF5b3V0LnRzeAorKysgYi9hcHAvbGF5b3V0LnRzeApAQCAtNyw2ICs3LDcgQEAgaW1wb3J0IHR5cGUgeyBNZXRhZGF0YSwgVmlld3BvcnQgfSBmcm9tICJuZXh0IjsKIGltcG9ydCB7IFNwZWVkSW5zaWdodHMgfSBmcm9tICJAdmVyY2VsL3NwZWVkLWluc2lnaHRzL25leHQiOwogaW1wb3J0IHsgR29vZ2xlVGFnTWFuYWdlciwgR29vZ2xlQW5hbHl0aWNzIH0gZnJvbSAiQG5leHQvdGhpcmQtcGFydGllcy9nb29nbGUiOwogaW1wb3J0IHsgZ2V0U2VydmVyU2lkZUNvbmZpZyB9IGZyb20gIi4vY29uZmlnL3NlcnZlciI7CitpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICJyZWFjdCI7CiAKIGV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7CiAgIHRpdGxlOiAiTmV4dENoYXQiLApAQCAtMjcsMTMgKzI4LDU4IEBAIGV4cG9ydCBjb25zdCB2aWV3cG9ydDogVmlld3BvcnQgPSB7CiAgIF0sCiB9OwogCitmdW5jdGlvbiBhZGRNdWx0aXBsZVdhdGVybWFya3MobGluZXM6IHN0cmluZ1tdKSB7CisgIGNvbnN0IGV4aXN0aW5nV2F0ZXJtYXJrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIndhdGVybWFyay1jb250YWluZXIiKTsKKyAgaWYgKGV4aXN0aW5nV2F0ZXJtYXJrKSB7CisgICAgZXhpc3RpbmdXYXRlcm1hcmsucmVtb3ZlKCk7CisgIH0KKworICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKKyAgY29udGFpbmVyLmlkID0gIndhdGVybWFyay1jb250YWluZXIiOworICBjb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOworICBjb250YWluZXIuc3R5bGUudG9wID0gIjAiOworICBjb250YWluZXIuc3R5bGUubGVmdCA9ICIwIjsKKyAgY29udGFpbmVyLnN0eWxlLndpZHRoID0gIjEwMHZ3IjsKKyAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9ICIxMDB2aCI7CisgIGNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImdyaWQiOworICBjb250YWluZXIuc3R5bGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9ICJyZXBlYXQoMywgMWZyKSI7CisgIGNvbnRhaW5lci5zdHlsZS5ncmlkVGVtcGxhdGVSb3dzID0gInJlcGVhdCgzLCAxZnIpIjsKKyAgY29udGFpbmVyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAibm9uZSI7CisgIGNvbnRhaW5lci5zdHlsZS56SW5kZXggPSAiOTk5OSI7CisKKyAgZnVuY3Rpb24gdXBkYXRlV2F0ZXJtYXJrQ29sb3IoKSB7CisgICAgY29uc3QgaXNEYXJrTW9kZSA9IHdpbmRvdy5tYXRjaE1lZGlhKCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIikubWF0Y2hlczsKKyAgICBjb25zdCBjb2xvciA9IGlzRGFya01vZGUgPyAicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpIiA6ICJyZ2JhKDAsIDAsIDAsIDAuMSkiOworCisgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICIiOworCisgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA5OyBpKyspIHsKKyAgICAgIGNvbnN0IHdhdGVybWFyayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOworICAgICAgd2F0ZXJtYXJrLmlubmVyVGV4dCA9IGxpbmVzLmpvaW4oIlxuIik7CisgICAgICB3YXRlcm1hcmsuc3R5bGUuZm9udFNpemUgPSAiMThweCI7CisgICAgICB3YXRlcm1hcmsuc3R5bGUuY29sb3IgPSBjb2xvcjsKKyAgICAgIHdhdGVybWFyay5zdHlsZS50ZXh0QWxpZ24gPSAibGVmdCI7CisgICAgICB3YXRlcm1hcmsuc3R5bGUud2hpdGVTcGFjZSA9ICJwcmUtbGluZSI7CisgICAgICB3YXRlcm1hcmsuc3R5bGUubGluZUhlaWdodCA9ICIxLjUiOworICAgICAgd2F0ZXJtYXJrLnN0eWxlLnRyYW5zZm9ybSA9ICJyb3RhdGUoLTMwZGVnKSI7CisgICAgICB3YXRlcm1hcmsuc3R5bGUuYWxpZ25TZWxmID0gImNlbnRlciI7CisgICAgICB3YXRlcm1hcmsuc3R5bGUuanVzdGlmeVNlbGYgPSAiY2VudGVyIjsKKyAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh3YXRlcm1hcmspOworICAgIH0KKyAgfQorCisgIHVwZGF0ZVdhdGVybWFya0NvbG9yKCk7CisgIHdpbmRvdy5tYXRjaE1lZGlhKCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIikuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgdXBkYXRlV2F0ZXJtYXJrQ29sb3IpOworICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7Cit9CisKIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoewogICBjaGlsZHJlbiwKIH06IHsKICAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTsKIH0pIHsKICAgY29uc3Qgc2VydmVyQ29uZmlnID0gZ2V0U2VydmVyU2lkZUNvbmZpZygpOwotCisgIAogICByZXR1cm4gKAogICAgIDxodG1sIGxhbmc9ImVuIj4KICAgICAgIDxoZWFkPgpAQCAtNDgsNiArOTQsMTcgQEAgZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7CiAgICAgICAgICAgY3Jvc3NPcmlnaW49InVzZS1jcmVkZW50aWFscyIKICAgICAgICAgPjwvbGluaz4KICAgICAgICAgPHNjcmlwdCBzcmM9Ii9zZXJ2aWNlV29ya2VyUmVnaXN0ZXIuanMiIGRlZmVyPjwvc2NyaXB0PgorICAgICAgICA8c2NyaXB0CisgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sKKyAgICAgICAgICAgIF9faHRtbDogYAorICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIiwgZnVuY3Rpb24oKSB7CisgICAgICAgICAgICAgICAgKCR7YWRkTXVsdGlwbGVXYXRlcm1hcmtzLnRvU3RyaW5nKCl9KSgKKyAgICAgICAgICAgICAgICAgIFsi4pqg77iPIOivt+WLv+WPkemAgeacuuWvhuS/oeaBryIsICLimqDvuI8gTm8gY29uZmlkZW50aWFsIGluZm9ybWF0aW9uIl0KKyAgICAgICAgICAgICAgICApOworICAgICAgICAgICAgICB9KTsKKyAgICAgICAgICAgIGAsCisgICAgICAgICAgfX0KKyAgICAgICAgLz4KICAgICAgIDwvaGVhZD4KICAgICAgIDxib2R5PgogICAgICAgICB7Y2hpbGRyZW59Cg==' | base64 --decode | tee my_custom_patch_file.patch
          git apply my_custom_patch_file.patch || patch -p1 < my_custom_patch_file.patch
          
      -
        name: Login to docker ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/edisonjwa/chatgpt-next-web
          tags: |
            type=raw,value=latest
            type=ref,event=tag
      
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
            
